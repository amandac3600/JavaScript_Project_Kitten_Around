/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/border.js":
/*!***********************!*\
  !*** ./src/border.js ***!
  \***********************/
/***/ (function(module) {

eval("function Border(x, y, width, height, type) {\n  this.x = x;\n  this.y = y;\n  this.width = width;\n  this.height = height;\n  this.type = type;\n  this.image = new Image();\n\n  this.draw = function (ctx) {\n    if (this.type === \"water\") {\n      this.image.src = `./images/water.png`;\n    } else if (this.type === \"log\") {\n      this.image.src = `./images/log.png`;\n    } else if (this.type === \"fish\") {\n      this.image.src = `./images/fish.png`;\n    }\n\n    ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n  };\n}\n\nmodule.exports = Border;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9KYXZhU2NyaXB0X1Byb2plY3QvLi9zcmMvYm9yZGVyLmpzPzUxNjkiXSwibmFtZXMiOlsiQm9yZGVyIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsInR5cGUiLCJpbWFnZSIsIkltYWdlIiwiZHJhdyIsImN0eCIsInNyYyIsImRyYXdJbWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLE1BQVQsQ0FBZ0JDLENBQWhCLEVBQW1CQyxDQUFuQixFQUFzQkMsS0FBdEIsRUFBNkJDLE1BQTdCLEVBQXFDQyxJQUFyQyxFQUEyQztBQUN6QyxPQUFLSixDQUFMLEdBQVNBLENBQVQ7QUFDQSxPQUFLQyxDQUFMLEdBQVNBLENBQVQ7QUFDQSxPQUFLQyxLQUFMLEdBQWFBLEtBQWI7QUFDQSxPQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxPQUFLQyxJQUFMLEdBQVlBLElBQVo7QUFDQSxPQUFLQyxLQUFMLEdBQWEsSUFBSUMsS0FBSixFQUFiOztBQUVBLE9BQUtDLElBQUwsR0FBWSxVQUFTQyxHQUFULEVBQWM7QUFDeEIsUUFBSSxLQUFLSixJQUFMLEtBQWMsT0FBbEIsRUFBMkI7QUFDekIsV0FBS0MsS0FBTCxDQUFXSSxHQUFYLEdBQWtCLG9CQUFsQjtBQUNELEtBRkQsTUFFTyxJQUFJLEtBQUtMLElBQUwsS0FBYyxLQUFsQixFQUF5QjtBQUM5QixXQUFLQyxLQUFMLENBQVdJLEdBQVgsR0FBa0Isa0JBQWxCO0FBQ0QsS0FGTSxNQUVBLElBQUksS0FBS0wsSUFBTCxLQUFjLE1BQWxCLEVBQTBCO0FBQy9CLFdBQUtDLEtBQUwsQ0FBV0ksR0FBWCxHQUFrQixtQkFBbEI7QUFDRDs7QUFDREQsSUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsS0FBS0wsS0FBbkIsRUFBMEIsS0FBS0wsQ0FBL0IsRUFBa0MsS0FBS0MsQ0FBdkMsRUFBMEMsS0FBS0MsS0FBL0MsRUFBc0QsS0FBS0MsTUFBM0Q7QUFDRCxHQVREO0FBVUQ7O0FBRURRLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBCb3JkZXIoeCwgeSwgd2lkdGgsIGhlaWdodCwgdHlwZSkge1xyXG4gIHRoaXMueCA9IHg7XHJcbiAgdGhpcy55ID0geTtcclxuICB0aGlzLndpZHRoID0gd2lkdGg7XHJcbiAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XHJcbiAgdGhpcy50eXBlID0gdHlwZTtcclxuICB0aGlzLmltYWdlID0gbmV3IEltYWdlKCk7XHJcblxyXG4gIHRoaXMuZHJhdyA9IGZ1bmN0aW9uKGN0eCkge1xyXG4gICAgaWYgKHRoaXMudHlwZSA9PT0gXCJ3YXRlclwiKSB7XHJcbiAgICAgIHRoaXMuaW1hZ2Uuc3JjID0gYC4vaW1hZ2VzL3dhdGVyLnBuZ2A7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMudHlwZSA9PT0gXCJsb2dcIikge1xyXG4gICAgICB0aGlzLmltYWdlLnNyYyA9IGAuL2ltYWdlcy9sb2cucG5nYDtcclxuICAgIH0gZWxzZSBpZiAodGhpcy50eXBlID09PSBcImZpc2hcIikge1xyXG4gICAgICB0aGlzLmltYWdlLnNyYyA9IGAuL2ltYWdlcy9maXNoLnBuZ2A7XHJcbiAgICB9XHJcbiAgICBjdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIHRoaXMueCwgdGhpcy55LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEJvcmRlcjtcclxuIl0sImZpbGUiOiIuL3NyYy9ib3JkZXIuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/border.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const Player = __webpack_require__(/*! ./player.js */ \"./src/player.js\");\n\nconst Border = __webpack_require__(/*! ./border.js */ \"./src/border.js\");\n\nconst Mouse = __webpack_require__(/*! ./mouse.js */ \"./src/mouse.js\");\n\nconst Sound = __webpack_require__(/*! ./sound.js */ \"./src/sound.js\");\n\nlet gameLoop;\n\nwindow.onload = function () {\n  let startscreen = document.getElementById(\"startscreen\");\n  let button = document.getElementById(\"button\");\n\n  function hide() {\n    startscreen.style.display = \"none\";\n    startscreen.setAttribute(\"id\", \"hidden\");\n  } //gameloop\n\n\n  button.addEventListener(\"click\", hide);\n  button.addEventListener(\"click\", startGame);\n  let hiddenstart = document.getElementById(\"hidden\");\n\n  if (!hiddenstart) {\n    createstartScreen();\n  } //toggle mute and unmute\n\n\n  let volume = document.getElementById(\"volume\");\n  volume.addEventListener(\"click\", toggleSound);\n  console.log(volume);\n  let newGame = document.getElementById(\"newgame\");\n  newGame.addEventListener(\"click\", restart);\n  let canvas = document.getElementById(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let img = document.getElementById(\"image\");\n  let player = new Player(600, 200); //sounds and music\n\n  let backgroundSound = new Sound(\"./sounds/background.mp3\");\n  let catSound = new Sound(\"./sounds/cat_pain.wav\");\n  let waterSound = new Sound(\"./sounds/water.wav\");\n  let mouseSound = new Sound(\"./sounds/mouse.mp3\");\n  mouseSound.sound.volume = 0.2;\n  let eatingSound = new Sound(\"./sounds/eating.wav\");\n  eatingSound.sound.volume = 0.5;\n\n  function startGame() {\n    gameLoop = setInterval(step, 30); //30 fps\n\n    player.setupInputs();\n    backgroundSound.playing = false;\n    catSound.playing = false;\n  }\n\n  function restart() {\n    gameOver();\n    startGame();\n  }\n\n  let borders = [];\n  borders.push(new Border(0, 620, 600, 25, \"log\"));\n  borders.push(new Border(620, 520, 100, 25, \"log\"));\n  borders.push(new Border(740, 420, 250, 25, \"log\"));\n  borders.push(new Border(880, 320, 150, 25, \"log\"));\n  borders.push(new Border(1200, 300, 150, 25, \"log\"));\n  borders.push(new Border(1370, 220, 200, 25, \"log\"));\n  borders.push(new Border(1800, 620, 150, 25, \"log\"));\n  borders.push(new Border(2050, 540, 200, 25, \"log\"));\n  borders.push(new Border(2300, 640, 150, 25, \"log\"));\n  borders.push(new Border(2350, 440, 150, 25, \"log\"));\n  borders.push(new Border(2600, 340, 200, 25, \"log\"));\n  borders.push(new Border(2900, 240, 150, 25, \"log\"));\n  borders.push(new Border(2550, 660, 150, 25, \"log\"));\n  borders.push(new Border(2700, 600, 300, 25, \"log\"));\n  borders.push(new Border(3050, 500, 150, 25, \"log\"));\n  borders.push(new Border(3250, 400, 200, 25, \"log\"));\n  borders.push(new Border(3500, 650, 400, 25, \"log\"));\n  borders.push(new Border(-1278, 680, 1282, 100, \"water\"));\n  borders.push(new Border(0, 680, 1282, 100, \"water\"));\n  borders.push(new Border(1278, 680, 1282, 100, \"water\"));\n  borders.push(new Border(2556, 680, 1350, 100, \"water\"));\n  player.borders = borders;\n  let mice = [];\n  let mouse1 = new Mouse(550, 595);\n  let mouse2 = new Mouse(900, 390);\n  mice.push(mouse1);\n  mice.push(mouse2);\n  let fish = new Border(3670, 620, 100, 40, \"fish\");\n  borders.push(fish);\n\n  function draw() {\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height); //clear the canvas before redrawing\n    //draw background\n\n    ctx.drawImage(img, -1280, 0);\n    ctx.drawImage(img, 0, 0);\n    ctx.drawImage(img, 1280, 0);\n    ctx.drawImage(img, 2560, 0);\n    ctx.drawImage(img, 3840, 0);\n\n    if (player.xvel > 0) {\n      if (player.x < 3300 && player.x > 500) {\n        ctx.translate(-player.xvel - 5, 0);\n      }\n    } else if (player.xvel < 0) {\n      if (player.x > 500 && player.x < 3200) {\n        ctx.translate(-player.xvel + 5, 0);\n      }\n    }\n\n    player.draw(ctx); //redraw the player at the new pos\n\n    borders.forEach(border => {\n      border.draw(ctx);\n    });\n    mice.forEach(mouse => {\n      mouse.draw(ctx);\n    });\n    fish.draw(ctx);\n  }\n\n  function step() {\n    //main step function for things other than the player (like the mice)    \n    player.step();\n    let num1; // if (mouse1.x <= 10) {\n    //   num1 = 5;\n    //   mouse1.xvel = -num1 * -1;\n    // } else if (mouse1.x >= 550) {\n    //   num1 = -5;\n    //   mouse1.xvel = -num1 * -1;\n    // }\n    // mouse1.step(num1);\n\n    let horizontalRect = {\n      x: player.x + player.xvel,\n      y: player.y,\n      width: player.width,\n      height: player.height\n    }; //vert collision rect\n\n    let verticalRect = {\n      x: player.x,\n      y: player.y + player.yvel,\n      width: player.width,\n      height: player.height\n    };\n    draw(); //redraw canvas once everything has been updated\n\n    if (player.x < 0) {\n      player.x = 0;\n    }\n\n    borders.forEach(border => {\n      let borderRect = {\n        x: border.x,\n        y: border.y,\n        width: border.width,\n        height: border.height\n      }; //check collision with logs\n\n      if (checkCollision(horizontalRect, borderRect) && border.type === \"log\") {\n        if (player.x + player.width > borderRect.x && player.y + player.height < borderRect.y) {\n          player.x = player.x;\n        }\n      }\n\n      if (checkCollision(verticalRect, borderRect) && border.type === \"log\") {\n        if (player.y - player.height + 200 < borderRect.y && player.x + player.width - 55 > borderRect.x) {\n          player.y = borderRect.y - player.height - 5;\n        }\n      } //check collision with water\n\n\n      if (checkCollision(verticalRect, borderRect) && border.type === \"water\") {\n        if (player.y + player.height > borderRect.y) {\n          displayGameOver();\n          gameOver();\n\n          if (catSound.playing === true) {\n            catSound.play();\n            waterSound.sound.volume = 0.3;\n            waterSound.play();\n          }\n        }\n      } //check collision with fish\n\n\n      if (checkCollision(horizontalRect, borderRect) && border.type === \"fish\") {\n        if (player.x + player.width - 50 > borderRect.x && player.y + player.height + 20 < borderRect.y) {\n          player.x = player.x;\n          gameOver();\n          displayVictoryMsg();\n\n          if (catSound.playing === true) {\n            eatingSound.play();\n          }\n        }\n      }\n\n      if (checkCollision(verticalRect, borderRect) && border.type === \"fish\") {\n        if (player.y + player.height > borderRect.y && player.x + player.width - 50 > borderRect.x) {\n          gameOver();\n          displayVictoryMsg();\n\n          if (catSound.playing === true) {\n            eatingSound.play();\n          }\n        }\n      }\n    }); //check collision with mice\n\n    mice.forEach(mouse => {\n      let mouseRect = {\n        x: mouse.x,\n        y: mouse.y,\n        width: mouse.width,\n        height: mouse.height\n      };\n\n      if (checkCollision(horizontalRect, mouseRect)) {\n        if (player.x + player.width - 100 > mouseRect.x && player.y + player.height + 20 < mouseRect.y) {\n          displayGameOver();\n          gameOver();\n\n          if (catSound.playing === true) {\n            catSound.play();\n            mouseSound.play();\n          }\n        }\n      } // if(checkCollision(verticalRect, mouseRect)) {\n      //   if (player.y + player.height > mouseRect.y && player.x + player.width > mouseRect.x ) {\n      //     displayGameOver();\n      //     gameOver();\n      //     if (catSound.playing === true) {\n      //       catSound.play();\n      //       mouseSound.play();\n      //     }\n      //   } else if (player.y < mouseRect.y + mouseRect.height && player.x + player.width > mouseRect.x ) {\n      //     displayGameOver();\n      //     gameOver();\n      //     if (catSound.playing === true) {\n      //       catSound.play();\n      //       mouseSound.play();\n      //     }\n      //   }\n      // }  \n\n    });\n  }\n\n  function checkCollision(player, r2) {\n    let crash = true;\n\n    if (player.x >= r2.x + r2.width) {\n      crash = false;\n    } else if (player.x + player.width <= r2.x) {\n      crash = false;\n    } else if (player.y >= r2.y + r2.height) {\n      crash = false;\n    } else if (player.y + player.height <= r2.y) {\n      crash = false;\n    }\n\n    return crash;\n  }\n\n  function gameOver() {\n    backgroundSound.stop();\n    clearInterval(gameLoop);\n  }\n\n  function createstartScreen() {\n    let startScreen = document.getElementById('startscreen');\n    let text = document.createElement('p');\n    startScreen.appendChild(text);\n    text.innerHTML = 'Help Bobo get to the fish at the end of the pond! But be careful, the journey to her favorite food is filled with her enemies- water and mice!';\n  }\n\n  function createGameOver() {\n    let gameOverMessage = document.createElement('form');\n    let text = document.createElement('p');\n    let button = document.createElement('button');\n    let gg = document.getElementById(\"game-over\");\n    gg.appendChild(gameOverMessage);\n    gameOverMessage.appendChild(text);\n    gameOverMessage.appendChild(button);\n    gameOverMessage.classList.add(\"ggmessage\");\n    gameOverMessage.setAttribute(\"id\", \"gg\");\n    text.innerHTML = 'You ruined Bobo\\'s appetite';\n    button.innerText = 'New Game';\n  }\n\n  function displayGameOver() {\n    createGameOver();\n    let message = document.getElementById(\"gg\");\n    message.classList.add(\"enable\");\n  }\n\n  function createVictoryMsg() {\n    let victoryMsg = document.createElement('form');\n    let text = document.createElement('p');\n    let button = document.createElement('button');\n    let win = document.getElementById(\"win-msg\");\n    win.appendChild(victoryMsg);\n    victoryMsg.appendChild(text);\n    victoryMsg.appendChild(button);\n    victoryMsg.classList.add(\"winmessage\");\n    victoryMsg.setAttribute(\"id\", \"win\");\n    text.innerHTML = 'Yay! You fed Bobo!';\n    button.innerText = 'New Game';\n    button.setAttribute(\"id\", \"new\");\n  }\n\n  function displayVictoryMsg() {\n    createVictoryMsg();\n    let message = document.getElementById(\"win\");\n    message.classList.add(\"enable\"); // let newgame = document.getElementById('new');\n    // new.addEventListener(\"click\", restart)\n  }\n\n  function toggleSound() {\n    let vol = document.getElementById(\"volume\");\n\n    if (vol.className === \"fas fa-volume-mute\") {\n      backgroundSound.play();\n      catSound.playing = true;\n      vol.className = \"fas fa-volume-up\";\n    } else {\n      backgroundSound.stop();\n      catSound.playing = false;\n      vol.className = \"fas fa-volume-mute\";\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/mouse.js":
/*!**********************!*\
  !*** ./src/mouse.js ***!
  \**********************/
/***/ (function(module) {

eval("function Mouse(x, y) {\n  this.x = x;\n  this.y = y;\n  this.xvel = 0;\n  this.yvel = 0;\n  this.image = new Image();\n  this.image.src = `./images/back_mouse.png`;\n  this.width = 70;\n  this.height = 35;\n\n  this.step = function (num) {\n    this.x += num;\n  };\n\n  this.x += this.xvel;\n  this.y += this.yvel;\n\n  this.draw = function (ctx) {\n    if (this.xvel > 0) this.image.src = `./images/mouse.png`;else if (this.xvel < 0) this.image.src = `./images/back_mouse.png`;\n    ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n  };\n}\n\nmodule.exports = Mouse;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9KYXZhU2NyaXB0X1Byb2plY3QvLi9zcmMvbW91c2UuanM/YjcyMiJdLCJuYW1lcyI6WyJNb3VzZSIsIngiLCJ5IiwieHZlbCIsInl2ZWwiLCJpbWFnZSIsIkltYWdlIiwic3JjIiwid2lkdGgiLCJoZWlnaHQiLCJzdGVwIiwibnVtIiwiZHJhdyIsImN0eCIsImRyYXdJbWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLEtBQVQsQ0FBZUMsQ0FBZixFQUFrQkMsQ0FBbEIsRUFBcUI7QUFDbkIsT0FBS0QsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsT0FBS0MsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsT0FBS0MsSUFBTCxHQUFZLENBQVo7QUFDQSxPQUFLQyxJQUFMLEdBQVksQ0FBWjtBQUNBLE9BQUtDLEtBQUwsR0FBYSxJQUFJQyxLQUFKLEVBQWI7QUFDQSxPQUFLRCxLQUFMLENBQVdFLEdBQVgsR0FBa0IseUJBQWxCO0FBQ0EsT0FBS0MsS0FBTCxHQUFhLEVBQWI7QUFDQSxPQUFLQyxNQUFMLEdBQWMsRUFBZDs7QUFFQSxPQUFLQyxJQUFMLEdBQVksVUFBU0MsR0FBVCxFQUFjO0FBQ3hCLFNBQUtWLENBQUwsSUFBVVUsR0FBVjtBQUNELEdBRkQ7O0FBSUEsT0FBS1YsQ0FBTCxJQUFVLEtBQUtFLElBQWY7QUFDQSxPQUFLRCxDQUFMLElBQVUsS0FBS0UsSUFBZjs7QUFFQSxPQUFLUSxJQUFMLEdBQVksVUFBU0MsR0FBVCxFQUFjO0FBQ3hCLFFBQUksS0FBS1YsSUFBTCxHQUFZLENBQWhCLEVBQW1CLEtBQUtFLEtBQUwsQ0FBV0UsR0FBWCxHQUFrQixvQkFBbEIsQ0FBbkIsS0FDSyxJQUFJLEtBQUtKLElBQUwsR0FBWSxDQUFoQixFQUFtQixLQUFLRSxLQUFMLENBQVdFLEdBQVgsR0FBa0IseUJBQWxCO0FBQ3hCTSxJQUFBQSxHQUFHLENBQUNDLFNBQUosQ0FBYyxLQUFLVCxLQUFuQixFQUEwQixLQUFLSixDQUEvQixFQUFrQyxLQUFLQyxDQUF2QyxFQUEwQyxLQUFLTSxLQUEvQyxFQUFzRCxLQUFLQyxNQUEzRDtBQUNELEdBSkQ7QUFLRDs7QUFDRE0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsS0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBNb3VzZSh4LCB5KSB7XHJcbiAgdGhpcy54ID0geDtcclxuICB0aGlzLnkgPSB5O1xyXG4gIHRoaXMueHZlbCA9IDA7XHJcbiAgdGhpcy55dmVsID0gMDtcclxuICB0aGlzLmltYWdlID0gbmV3IEltYWdlKCk7XHJcbiAgdGhpcy5pbWFnZS5zcmMgPSBgLi9pbWFnZXMvYmFja19tb3VzZS5wbmdgO1xyXG4gIHRoaXMud2lkdGggPSA3MDtcclxuICB0aGlzLmhlaWdodCA9IDM1O1xyXG5cclxuICB0aGlzLnN0ZXAgPSBmdW5jdGlvbihudW0pIHtcclxuICAgIHRoaXMueCArPSBudW07XHJcbiAgfVxyXG5cclxuICB0aGlzLnggKz0gdGhpcy54dmVsO1xyXG4gIHRoaXMueSArPSB0aGlzLnl2ZWw7XHJcblxyXG4gIHRoaXMuZHJhdyA9IGZ1bmN0aW9uKGN0eCkge1xyXG4gICAgaWYgKHRoaXMueHZlbCA+IDApIHRoaXMuaW1hZ2Uuc3JjID0gYC4vaW1hZ2VzL21vdXNlLnBuZ2A7XHJcbiAgICBlbHNlIGlmICh0aGlzLnh2ZWwgPCAwKSB0aGlzLmltYWdlLnNyYyA9IGAuL2ltYWdlcy9iYWNrX21vdXNlLnBuZ2A7XHJcbiAgICBjdHguZHJhd0ltYWdlKHRoaXMuaW1hZ2UsIHRoaXMueCwgdGhpcy55LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgfVxyXG59XHJcbm1vZHVsZS5leHBvcnRzID0gTW91c2U7XHJcbiJdLCJmaWxlIjoiLi9zcmMvbW91c2UuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/mouse.js\n");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ (function(module) {

eval("let upKey, rightKey, downKey, leftKey;\n\nfunction Player(x, y) {\n  this.x = x;\n  this.y = y;\n  this.image = new Image();\n  this.image.src = `./images/sprite.png`;\n  this.image.width = 1098;\n  this.image.height = 1932;\n  this.xvel = 0;\n  this.yvel = 0;\n  this.friction = 0.6;\n  this.maxVel = 5;\n  this.width = 130;\n  this.height = 125;\n  this.active = true;\n  this.borders = [];\n  let framex = 0;\n  let framey = 0;\n\n  this.step = function () {\n    //horiz mvmt\n    if (this.active) {\n      if (this.xvel === 0 && !upKey) {\n        framex = 0;\n        framey = 0;\n      }\n\n      if (!leftKey && !rightKey || leftKey && rightKey) {\n        this.xvel *= this.friction;\n        this.framex = 0;\n        this.framey = 0;\n      } else if (rightKey && !upKey) {\n        this.image.src = `./images/sprite.png`;\n        if (framex < 1) framex++;else framex = 0;\n        if (framey < 3) framey++;else framey = 0;\n        this.xvel++;\n      } else if (leftKey && !upKey) {\n        this.image.src = `./images/spriteback.png`;\n        if (framex < 1) framex++;else framex = 0;\n        if (framey < 3) framey++;else framey = 0;\n        this.xvel--;\n      }\n\n      this.x += this.xvel;\n      this.y += this.yvel;\n    } //vert mvmt\n\n\n    let logs = [];\n    this.borders.forEach(border => {\n      if (border.type === \"log\") logs.push(border);\n    });\n    logs.forEach(border => {\n      let borderRect = {\n        x: border.x,\n        y: border.y,\n        width: border.width,\n        height: border.height\n      };\n\n      if (upKey && this.y + this.height === borderRect.y && this.x + this.width / 2 + 16 > borderRect.x && this.x + this.width / 2 - 16 < borderRect.x + borderRect.width) {\n        framex = 1;\n        framey = 2;\n        this.yvel -= 22;\n      }\n    }); // this.y -= 10;\n    //gravity\n\n    this.yvel += 2; //adjust vel\n\n    if (this.xvel > this.maxVel) {\n      this.xvel = this.maxVel;\n    } else if (this.xvel < -this.maxVel) {\n      this.xvel = -this.maxVel;\n    }\n\n    if (this.yvel > this.maxVel) {\n      this.yvel = this.maxVel;\n    } // if (this.yvel < -this.maxVel) {\n    //   this.yvel = -this.maxVel;\n    // }\n\n\n    if (this.xvel > 0) {\n      this.xvel = Math.floor(this.xvel);\n    } else {\n      this.xvel = Math.ceil(this.xvel);\n    }\n\n    if (this.yvel > 0) {\n      this.yvel = Math.floor(this.yvel);\n    } else {\n      this.yvel = Math.ceil(this.yvel);\n    }\n\n    this.x += this.xvel;\n    this.y += this.yvel;\n  };\n\n  let spriteWidth = this.image.width / 2;\n  let spriteHeight = this.image.height / 4;\n\n  this.draw = function (ctx) {\n    ctx.drawImage(this.image, framex * spriteWidth, framey * spriteHeight, spriteWidth, spriteHeight, this.x, this.y, this.width, this.height); //image, xcoord, ycoord, width of image, height, xcoord where to draw, ycoord, desired width of drawing,height\n  };\n\n  this.setupInputs = function () {\n    document.addEventListener(\"keydown\", function (event) {\n      if (event.key === \"w\" || event.key === \"ArrowUp\") {\n        event.preventDefault();\n        upKey = true;\n      } else if (event.key === \"a\" || event.key === \"ArrowLeft\") {\n        event.preventDefault();\n        leftKey = true;\n      } else if (event.key === \"s\" || event.key === \"ArrowDown\") {\n        event.preventDefault();\n        downKey = true;\n      } else if (event.key === \"d\" || event.key === \"ArrowRight\") {\n        event.preventDefault();\n        rightKey = true;\n      }\n    });\n    document.addEventListener(\"keyup\", function (event) {\n      if (event.key === \"w\" || event.key === \"ArrowUp\") {\n        upKey = false;\n      } else if (event.key === \"a\" || event.key === \"ArrowLeft\") {\n        leftKey = false;\n      } else if (event.key === \"s\" || event.key === \"ArrowDown\") {\n        downKey = false;\n      } else if (event.key === \"d\" || event.key === \"ArrowRight\") {\n        rightKey = false;\n      }\n    });\n  };\n}\n\nmodule.exports = Player; // export default Player;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9KYXZhU2NyaXB0X1Byb2plY3QvLi9zcmMvcGxheWVyLmpzP2E4YTIiXSwibmFtZXMiOlsidXBLZXkiLCJyaWdodEtleSIsImRvd25LZXkiLCJsZWZ0S2V5IiwiUGxheWVyIiwieCIsInkiLCJpbWFnZSIsIkltYWdlIiwic3JjIiwid2lkdGgiLCJoZWlnaHQiLCJ4dmVsIiwieXZlbCIsImZyaWN0aW9uIiwibWF4VmVsIiwiYWN0aXZlIiwiYm9yZGVycyIsImZyYW1leCIsImZyYW1leSIsInN0ZXAiLCJsb2dzIiwiZm9yRWFjaCIsImJvcmRlciIsInR5cGUiLCJwdXNoIiwiYm9yZGVyUmVjdCIsIk1hdGgiLCJmbG9vciIsImNlaWwiLCJzcHJpdGVXaWR0aCIsInNwcml0ZUhlaWdodCIsImRyYXciLCJjdHgiLCJkcmF3SW1hZ2UiLCJzZXR1cElucHV0cyIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50Iiwia2V5IiwicHJldmVudERlZmF1bHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxLQUFKLEVBQVdDLFFBQVgsRUFBcUJDLE9BQXJCLEVBQThCQyxPQUE5Qjs7QUFFQSxTQUFTQyxNQUFULENBQWdCQyxDQUFoQixFQUFtQkMsQ0FBbkIsRUFBc0I7QUFDcEIsT0FBS0QsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsT0FBS0MsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsT0FBS0MsS0FBTCxHQUFhLElBQUlDLEtBQUosRUFBYjtBQUNBLE9BQUtELEtBQUwsQ0FBV0UsR0FBWCxHQUFrQixxQkFBbEI7QUFDQSxPQUFLRixLQUFMLENBQVdHLEtBQVgsR0FBbUIsSUFBbkI7QUFDQSxPQUFLSCxLQUFMLENBQVdJLE1BQVgsR0FBb0IsSUFBcEI7QUFDQSxPQUFLQyxJQUFMLEdBQVksQ0FBWjtBQUNBLE9BQUtDLElBQUwsR0FBWSxDQUFaO0FBQ0EsT0FBS0MsUUFBTCxHQUFnQixHQUFoQjtBQUNBLE9BQUtDLE1B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Q0FBQ0UsY0FBTjtBQUNBdkMsUUFBQUEsUUFBUSxHQUFHLElBQVg7QUFDRDtBQUNGLEtBZEQ7QUFnQkFtQyxJQUFBQSxRQUFRLENBQUNDLGdCQUFULENBQTBCLE9BQTFCLEVBQW1DLFVBQVNDLEtBQVQsRUFBZ0I7QUFDakQsVUFBSUEsS0FBSyxDQUFDQyxHQUFOLEtBQWMsR0FBZCxJQUFxQkQsS0FBSyxDQUFDQyxHQUFOLEtBQWMsU0FBdkMsRUFBa0Q7QUFDaER2QyxRQUFBQSxLQUFLLEdBQUcsS0FBUjtBQUNELE9BRkQsTUFFTyxJQUFJc0MsS0FBSyxDQUFDQyxHQUFOLEtBQWMsR0FBZCxJQUFxQkQsS0FBSyxDQUFDQyxHQUFOLEtBQWMsV0FBdkMsRUFBb0Q7QUFDekRwQyxRQUFBQSxPQUFPLEdBQUcsS0FBVjtBQUNELE9BRk0sTUFFQSxJQUFJbUMsS0FBSyxDQUFDQyxHQUFOLEtBQWMsR0FBZCxJQUFxQkQsS0FBSyxDQUFDQyxHQUFOLEtBQWMsV0FBdkMsRUFBb0Q7QUFDekRyQyxRQUFBQSxPQUFPLEdBQUcsS0FBVjtBQUNELE9BRk0sTUFFQSxJQUFJb0MsS0FBSyxDQUFDQyxHQUFOLEtBQWMsR0FBZCxJQUFxQkQsS0FBSyxDQUFDQyxHQUFOLEtBQWMsWUFBdkMsRUFBcUQ7QUFDMUR0QyxRQUFBQSxRQUFRLEdBQUcsS0FBWDtBQUNEO0FBQ0YsS0FWRDtBQVdELEdBNUJEO0FBNkJEOztBQUlEd0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCdEMsTUFBakIsQyxDQUNBIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHVwS2V5LCByaWdodEtleSwgZG93bktleSwgbGVmdEtleTtcclxuXHJcbmZ1bmN0aW9uIFBsYXllcih4LCB5KSB7XHJcbiAgdGhpcy54ID0geDtcclxuICB0aGlzLnkgPSB5O1xyXG4gIHRoaXMuaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICB0aGlzLmltYWdlLnNyYyA9IGAuL2ltYWdlcy9zcHJpdGUucG5nYDtcclxuICB0aGlzLmltYWdlLndpZHRoID0gMTA5ODtcclxuICB0aGlzLmltYWdlLmhlaWdodCA9IDE5MzI7XHJcbiAgdGhpcy54dmVsID0gMDtcclxuICB0aGlzLnl2ZWwgPSAwO1xyXG4gIHRoaXMuZnJpY3Rpb24gPSAwLjY7XHJcbiAgdGhpcy5tYXhWZWwgPSA1O1xyXG4gIHRoaXMud2lkdGggPSAxMzA7XHJcbiAgdGhpcy5oZWlnaHQgPSAxMjU7XHJcbiAgdGhpcy5hY3RpdmUgPSB0cnVlO1xyXG4gIHRoaXMuYm9yZGVycyA9IFtdO1xyXG5cclxuICBsZXQgZnJhbWV4ID0gMDtcclxuICBsZXQgZnJhbWV5ID0gMDtcclxuXHJcbiAgdGhpcy5zdGVwID0gZnVuY3Rpb24oKSB7XHJcbiAgICAvL2hvcml6IG12bXRcclxuICAgIGlmICh0aGlzLmFjdGl2ZSkge1xyXG4gICAgICBpZiAodGhpcy54dmVsID09PSAwICYmICF1cEtleSkge1xyXG4gICAgICAgIGZyYW1leCA9IDA7XHJcbiAgICAgICAgZnJhbWV5ID0gMDtcclxuICAgICAgfVxyXG4gICAgICBpZiAoIWxlZnRLZXkgJiYgIXJpZ2h0S2V5IHx8IGxlZnRLZXkgJiYgcmlnaHRLZXkpIHtcclxuICAgICAgICB0aGlzLnh2ZWwgKj0gdGhpcy5mcmljdGlvbjtcclxuICAgICAgICB0aGlzLmZyYW1leCA9IDA7XHJcbiAgICAgICAgdGhpcy5mcmFtZXkgPSAwO1xyXG4gICAgICB9IGVsc2UgaWYgKHJpZ2h0S2V5ICYmICF1cEtleSkge1xyXG4gICAgICAgIHRoaXMuaW1hZ2Uuc3JjID0gYC4vaW1hZ2VzL3Nwcml0ZS5wbmdgO1xyXG4gICAgICAgIGlmIChmcmFtZXggPCAxKSBmcmFtZXgrKztcclxuICAgICAgICBlbHNlIGZyYW1leCA9IDA7XHJcbiAgICAgICAgaWYgKGZyYW1leSA8IDMpIGZyYW1leSsrO1xyXG4gICAgICAgIGVsc2UoZnJhbWV5ID0gMCk7XHJcbiAgICAgICAgdGhpcy54dmVsICsrO1xyXG4gICAgICB9IGVsc2UgaWYgKGxlZnRLZXkgJiYgIXVwS2V5KSB7XHJcbiAgICAgICAgdGhpcy5pbWFnZS5zcmMgPSBgLi9pbWFnZXMvc3ByaXRlYmFjay5wbmdgO1xyXG4gICAgICAgIGlmIChmcmFtZXggPCAxKSBmcmFtZXgrKztcclxuICAgICAgICBlbHNlIGZyYW1leCA9IDA7XHJcbiAgICAgICAgaWYgKGZyYW1leSA8IDMpIGZyYW1leSsrO1xyXG4gICAgICAgIGVsc2UoZnJhbWV5ID0gMCk7XHJcbiAgICAgICAgdGhpcy54dmVsIC0tO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMueCArPSB0aGlzLnh2ZWw7XHJcbiAgICAgIHRoaXMueSArPSB0aGlzLnl2ZWw7XHJcbiAgICB9XHJcblxyXG4gICAgLy92ZXJ0IG12bXRcclxuICAgIGxldCBsb2dzID0gW107XHJcbiAgICB0aGlzLmJvcmRlcnMuZm9yRWFjaCAoYm9yZGVyID0+IHtcclxuICAgICAgaWYgKGJvcmRlci50eXBlID09PSBcImxvZ1wiKSBsb2dzLnB1c2goYm9yZGVyKTtcclxuICAgIH0pXHJcblxyXG4gICAgbG9ncy5mb3JFYWNoIChib3JkZXIgPT4ge1xyXG4gICAgICBsZXQgYm9yZGVyUmVjdCA9IHtcclxuICAgICAgICB4OiBib3JkZXIueCxcclxuICAgICAgICB5OiBib3JkZXIueSxcclxuICAgICAgICB3aWR0aDogYm9yZGVyLndpZHRoLFxyXG4gICAgICAgIGhlaWdodDogYm9yZGVyLmhlaWdodFxyXG4gICAgICB9XHJcbiAgICAgIGlmICh1cEtleSAmJiB0aGlzLnkgKyB0aGlzLmhlaWdodCA9PT0gYm9yZGVyUmVjdC55ICYmICh0aGlzLnggKyB0aGlzLndpZHRoLzIgKyAxNiA+IGJvcmRlclJlY3QueCAmJiB0aGlzLnggKyB0aGlzLndpZHRoLzIgLSAxNiA8IGJvcmRlclJlY3QueCArIGJvcmRlclJlY3Qud2lkdGgpKSB7XHJcbiAgICAgICAgZnJhbWV4ID0gMTtcclxuICAgICAgICBmcmFtZXkgPSAyO1xyXG4gICAgICAgIHRoaXMueXZlbCAtPSAyMjtcclxuICAgICAgfSBcclxuICAgIH0gKVxyXG4gICAgICBcclxuXHJcbiAgICAgIC8vIHRoaXMueSAtPSAxMDtcclxuXHJcblxyXG4gICAgLy9ncmF2aXR5XHJcbiAgICB0aGlzLnl2ZWwgKz0gMjtcclxuXHJcbiAgICAvL2FkanVzdCB2ZWxcclxuICAgIGlmICh0aGlzLnh2ZWwgPiB0aGlzLm1heFZlbCkge1xyXG4gICAgICB0aGlzLnh2ZWwgPSB0aGlzLm1heFZlbDtcclxuICAgIH0gZWxzZSBpZiAodGhpcy54dmVsIDwgLXRoaXMubWF4VmVsKSB7XHJcbiAgICAgIHRoaXMueHZlbCA9IC10aGlzLm1heFZlbDtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLnl2ZWwgPiB0aGlzLm1heFZlbCkge1xyXG4gICAgICB0aGlzLnl2ZWwgPSB0aGlzLm1heFZlbDtcclxuICAgIH0gXHJcbiAgICAvLyBpZiAodGhpcy55dmVsIDwgLXRoaXMubWF4VmVsKSB7XHJcbiAgICAvLyAgIHRoaXMueXZlbCA9IC10aGlzLm1heFZlbDtcclxuICAgIC8vIH1cclxuICAgIFxyXG5cclxuICAgIGlmICh0aGlzLnh2ZWwgPiAwKSB7XHJcbiAgICAgIHRoaXMueHZlbCA9IE1hdGguZmxvb3IodGhpcy54dmVsKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMueHZlbCA9IE1hdGguY2VpbCh0aGlzLnh2ZWwpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMueXZlbCA+IDApIHtcclxuICAgICAgdGhpcy55dmVsID0gTWF0aC5mbG9vcih0aGlzLnl2ZWwpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy55dmVsID0gTWF0aC5jZWlsKHRoaXMueXZlbCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy54ICs9IHRoaXMueHZlbDtcclxuICAgIHRoaXMueSArPSB0aGlzLnl2ZWw7XHJcbiAgfVxyXG5cclxuXHJcbiAgbGV0IHNwcml0ZVdpZHRoID0gdGhpcy5pbWFnZS53aWR0aC8yO1xyXG4gIGxldCBzcHJpdGVIZWlnaHQgPSB0aGlzLmltYWdlLmhlaWdodC80O1xyXG4gIHRoaXMuZHJhdyA9IGZ1bmN0aW9uKGN0eCkge1xyXG4gICAgY3R4LmRyYXdJbWFnZSh0aGlzLmltYWdlLCBmcmFtZXgqc3ByaXRlV2lkdGgsIGZyYW1leSpzcHJpdGVIZWlnaHQsIHNwcml0ZVdpZHRoLCBzcHJpdGVIZWlnaHQsIHRoaXMueCwgdGhpcy55LCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XHJcbiAgICAvL2ltYWdlLCB4Y29vcmQsIHljb29yZCwgd2lkdGggb2YgaW1hZ2UsIGhlaWdodCwgeGNvb3JkIHdoZXJlIHRvIGRyYXcsIHljb29yZCwgZGVzaXJlZCB3aWR0aCBvZiBkcmF3aW5nLGhlaWdodFxyXG4gIH1cclxuXHJcbiAgdGhpcy5zZXR1cElucHV0cyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCJ3XCIgfHwgZXZlbnQua2V5ID09PSBcIkFycm93VXBcIikge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgdXBLZXkgPSB0cnVlO1xyXG4gICAgICB9IGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gXCJhXCIgfHwgZXZlbnQua2V5ID09PSBcIkFycm93TGVmdFwiKSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBsZWZ0S2V5ID0gdHJ1ZTtcclxuICAgICAgfSBlbHNlIGlmIChldmVudC5rZXkgPT09IFwic1wiIHx8IGV2ZW50LmtleSA9PT0gXCJBcnJvd0Rvd25cIikge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgZG93bktleSA9IHRydWU7XHJcbiAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcImRcIiB8fCBldmVudC5rZXkgPT09IFwiQXJyb3dSaWdodFwiKSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICByaWdodEtleSA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgaWYgKGV2ZW50LmtleSA9PT0gXCJ3XCIgfHwgZXZlbnQua2V5ID09PSBcIkFycm93VXBcIikge1xyXG4gICAgICAgIHVwS2V5ID0gZmFsc2U7XHJcbiAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcImFcIiB8fCBldmVudC5rZXkgPT09IFwiQXJyb3dMZWZ0XCIpIHtcclxuICAgICAgICBsZWZ0S2V5ID0gZmFsc2U7XHJcbiAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcInNcIiB8fCBldmVudC5rZXkgPT09IFwiQXJyb3dEb3duXCIpIHtcclxuICAgICAgICBkb3duS2V5ID0gZmFsc2U7XHJcbiAgICAgIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSBcImRcIiB8fCBldmVudC5rZXkgPT09IFwiQXJyb3dSaWdodFwiKSB7XHJcbiAgICAgICAgcmlnaHRLZXkgPSBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUGxheWVyO1xyXG4vLyBleHBvcnQgZGVmYXVsdCBQbGF5ZXI7XHJcbiJdLCJmaWxlIjoiLi9zcmMvcGxheWVyLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/player.js\n");

/***/ }),

/***/ "./src/sound.js":
/*!**********************!*\
  !*** ./src/sound.js ***!
  \**********************/
/***/ (function(module) {

eval("function Sound(src) {\n  this.sound = document.createElement(\"audio\");\n  this.sound.src = src;\n  this.sound.volume = 0.1;\n  this.sound.setAttribute(\"preload\", \"auto\");\n  this.sound.setAttribute(\"controls\", \"none\");\n  this.sound.setAttribute(\"muted\", \"true\");\n  this.sound.style.display = \"none\";\n  this.playing = true;\n  document.getElementById(\"sounds\").appendChild(this.sound);\n\n  this.play = function () {\n    this.playing = true;\n    this.sound.play();\n  };\n\n  this.stop = function () {\n    this.playing = false;\n    this.sound.pause();\n  };\n}\n\nmodule.exports = Sound;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9KYXZhU2NyaXB0X1Byb2plY3QvLi9zcmMvc291bmQuanM/MzlmYiJdLCJuYW1lcyI6WyJTb3VuZCIsInNyYyIsInNvdW5kIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwidm9sdW1lIiwic2V0QXR0cmlidXRlIiwic3R5bGUiLCJkaXNwbGF5IiwicGxheWluZyIsImdldEVsZW1lbnRCeUlkIiwiYXBwZW5kQ2hpbGQiLCJwbGF5Iiwic3RvcCIsInBhdXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsS0FBVCxDQUFlQyxHQUFmLEVBQW9CO0FBQ2xCLE9BQUtDLEtBQUwsR0FBYUMsUUFBUSxDQUFDQyxhQUFULENBQXVCLE9BQXZCLENBQWI7QUFDQSxPQUFLRixLQUFMLENBQVdELEdBQVgsR0FBaUJBLEdBQWpCO0FBQ0EsT0FBS0MsS0FBTCxDQUFXRyxNQUFYLEdBQW9CLEdBQXBCO0FBQ0EsT0FBS0gsS0FBTCxDQUFXSSxZQUFYLENBQXdCLFNBQXhCLEVBQW1DLE1BQW5DO0FBQ0EsT0FBS0osS0FBTCxDQUFXSSxZQUFYLENBQXdCLFVBQXhCLEVBQW9DLE1BQXBDO0FBQ0EsT0FBS0osS0FBTCxDQUFXSSxZQUFYLENBQXdCLE9BQXhCLEVBQWlDLE1BQWpDO0FBQ0EsT0FBS0osS0FBTCxDQUFXSyxLQUFYLENBQWlCQyxPQUFqQixHQUEyQixNQUEzQjtBQUNBLE9BQUtDLE9BQUwsR0FBZSxJQUFmO0FBQ0FOLEVBQUFBLFFBQVEsQ0FBQ08sY0FBVCxDQUF3QixRQUF4QixFQUFrQ0MsV0FBbEMsQ0FBOEMsS0FBS1QsS0FBbkQ7O0FBRUEsT0FBS1UsSUFBTCxHQUFZLFlBQVU7QUFDcEIsU0FBS0gsT0FBTCxHQUFlLElBQWY7QUFDQSxTQUFLUCxLQUFMLENBQVdVLElBQVg7QUFDRCxHQUhEOztBQUtBLE9BQUtDLElBQUwsR0FBWSxZQUFVO0FBQ3BCLFNBQUtKLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBS1AsS0FBTCxDQUFXWSxLQUFYO0FBQ0QsR0FIRDtBQUlEOztBQUdEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJoQixLQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIFNvdW5kKHNyYykge1xyXG4gIHRoaXMuc291bmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYXVkaW9cIik7XHJcbiAgdGhpcy5zb3VuZC5zcmMgPSBzcmM7XHJcbiAgdGhpcy5zb3VuZC52b2x1bWUgPSAwLjFcclxuICB0aGlzLnNvdW5kLnNldEF0dHJpYnV0ZShcInByZWxvYWRcIiwgXCJhdXRvXCIpO1xyXG4gIHRoaXMuc291bmQuc2V0QXR0cmlidXRlKFwiY29udHJvbHNcIiwgXCJub25lXCIpO1xyXG4gIHRoaXMuc291bmQuc2V0QXR0cmlidXRlKFwibXV0ZWRcIiwgXCJ0cnVlXCIpO1xyXG4gIHRoaXMuc291bmQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gIHRoaXMucGxheWluZyA9IHRydWU7XHJcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb3VuZHNcIikuYXBwZW5kQ2hpbGQodGhpcy5zb3VuZCk7XHJcblxyXG4gIHRoaXMucGxheSA9IGZ1bmN0aW9uKCl7XHJcbiAgICB0aGlzLnBsYXlpbmcgPSB0cnVlO1xyXG4gICAgdGhpcy5zb3VuZC5wbGF5KCk7XHJcbiAgfVxyXG5cclxuICB0aGlzLnN0b3AgPSBmdW5jdGlvbigpe1xyXG4gICAgdGhpcy5wbGF5aW5nID0gZmFsc2U7XHJcbiAgICB0aGlzLnNvdW5kLnBhdXNlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBTb3VuZDtcclxuIl0sImZpbGUiOiIuL3NyYy9zb3VuZC5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/sound.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9KYXZhU2NyaXB0X1Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;